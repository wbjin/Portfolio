---
// src/components/ProjectCard.astro
import type { CollectionEntry } from 'astro:content';

export interface Props {
  /** one entry from your `post` collection */
  post: CollectionEntry<'post'>;
  /** override link (defaults to `/posts/${post.id}`) */
  url?: string;
}

const { post, url = `/posts/${post.id}`, image} = Astro.props;
const {
  data: { title, description, tags, publishDate },
  assetImports,
} = post;

// fall back to a default if you didnâ€™t import any images
---

<a
  href={url}
  class="flex flex-col md:flex-row items-center gap-6 p-6 rounded-2xl
         transition hover:shadow-lg
         bg-[var(--color-global-bg)]
         transition
         hover:ring-2
         hover:bg-[var(--color-accent)/10]"
>
  <!-- left image -->
  {image && (
    <img
      src={image}
      alt={title}
      class="w-full md:w-64 h-40 object-cover rounded-lg shadow-sm"
    />
  )}

  <!-- right text -->
  <div class="flex-1">
    <div class="flex items-center justify-between">
      <!-- title in your accent color -->
      <h3 class="text-2xl font-semibold">
        {title}
      </h3>
    </div>

    <!-- description in your global text color -->
    <p class="mt-2" style="color: var(--color-global-text);">
      {description}
    </p>

    <!-- tags as little pills -->
    <div class="flex flex-wrap gap-2 mt-4">
      {tags.map(tag => (
        <span
          class="px-3 py-1 rounded-full text-sm"
          style="
            background-color: var(--color-accent-2)/20;
            color: var(--color-accent-2);
          "
        >
          {tag}
        </span>
      ))}
    </div>

    <!-- publish date -->
    <time
      class="block mt-3 text-xs"
      style="color: var(--color-global-text); opacity: .7;"
    >
      {new Date(publishDate).toLocaleDateString(undefined, {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
      })}
    </time>
  </div>
</a>
